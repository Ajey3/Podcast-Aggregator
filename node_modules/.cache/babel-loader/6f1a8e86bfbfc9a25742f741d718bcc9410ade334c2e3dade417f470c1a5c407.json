{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajes\\\\OneDrive\\\\Desktop\\\\PodcastAggregator\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './components/SearchBar';\nimport PodcastList from './components/PodcastList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [podcasts, setPodcasts] = useState([]);\n  const searchPodcasts = async () => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/search?q=${query}`);\n      setPodcasts(response.data.results || []);\n    } catch (error) {\n      console.error(\"Error fetching podcasts:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Podcast Aggregator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      query: query,\n      setQuery: setQuery,\n      searchPodcasts: searchPodcasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PodcastList, {\n      podcasts: podcasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"/qkuHZhqbvkLhabPCzxZUnAhAr4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","SearchBar","PodcastList","jsxDEV","_jsxDEV","App","_s","query","setQuery","podcasts","setPodcasts","searchPodcasts","response","get","data","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rajes/OneDrive/Desktop/PodcastAggregator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './components/SearchBar';\nimport PodcastList from './components/PodcastList';\n\nfunction App() {\n    const [query, setQuery] = useState('');\n    const [podcasts, setPodcasts] = useState([]);\n\n    const searchPodcasts = async () => {\n        try {\n            const response = await axios.get(`http://127.0.0.1:5000/search?q=${query}`);\n            setPodcasts(response.data.results || []);\n        } catch (error) {\n            console.error(\"Error fetching podcasts:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Podcast Aggregator</h1>\n            <SearchBar query={query} setQuery={setQuery} searchPodcasts={searchPodcasts} />\n            <PodcastList podcasts={podcasts} />\n        </div>\n    );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,kCAAkCN,KAAK,EAAE,CAAC;MAC3EG,WAAW,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAI,EAAE,CAAC;IAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA,CAACH,SAAS;MAACM,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACG,cAAc,EAAEA;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/ElB,OAAA,CAACF,WAAW;MAACO,QAAQ,EAAEA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd;AAAChB,EAAA,CApBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}